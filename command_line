
python train.py --logtostderr --train_dir=./final_models/ssd_inception_v2_carla --pipeline_config_path=./config/ssd_inception_v2_coco_carla.config

 python train.py --logtostderr --train_dir=./final_models/ssd_inception_v2_sim --pipeline_config_path=./config/ssd_inception_v2_coco_simulator.config


python create_tf_record.py --data_dir=data/carla_mix_train_test --annotations_dir=labels --output_path=final_data/real.record --label_map_path=final_data/udacity_label_map.pbtxt --split_train_test=0.2

python create_tf_record.py --data_dir=data/sim_mix_train_test --annotations_dir=labels --output_path=final_data/sim.record --label_map_path=final_data/udacity_label_map.pbtxt --split_train_test=0.2

python train.py --logtostderr --train_dir=./final_models/ssd_mobilenet_v1_fpn_carla --pipeline_config_path=./config/ssd_mobilenet_v1_fpn_carla.config

python train.py --logtostderr --train_dir=./final_models/ssd_resnet50_v1_fpn_carla --pipeline_config_path=./config/ssd_resnet50_v1_fpn_carla.config


python export_inference_graph.py --input_type image_tensor --pipeline_config_path ./config/ssd_inception_v2_coco_carla.config --trained_checkpoint_prefix ./final_models/ssd_inception_v2_carla/model.ckpt-20000 --output_directory final_models/tf1.4_carla

python export_inference_graph.py --input_type image_tensor --pipeline_config_path ./config/ssd_inception_v2_coco_simulator.config --trained_checkpoint_prefix ./final_models/ssd_inception_v2_simulator/model.ckpt-20000 --output_directory final_models/tf1.4_sim


# To note: At first we need use tensorflow-gpu=1.14 or 1.15 to train traffic light detection with pre-trained model to get fine-tune -model, and export frozen_inference_graph_pb with export_inference_graph1.14.py.

# After first step, we need download fine-tune-model from colab and configurate Object-detecion API(tensorflow 1.4 compatible). Then we can export frozen_inference_graph_pb with export_inference_graph1.4.py. That model is what we needed for Udacity simulator and carla.